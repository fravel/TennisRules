version = '1.0.0-SNAPSHOT'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'eclipse'
apply plugin: 'cargo'

sourceCompatibility = 1.8

group='imie'

test.ignoreFailures=true

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.gradle.api.plugins:gradle-cargo-plugin:1.5.1'
    }
}


repositories {
    mavenCentral()
}

	
war {
 from 'WebContent' 
}

dependencies {
 compile(project(':TennisRulesService'))
 providedCompile group: 'javax', name: 'javaee-api', version: '7.+'
 testCompile group: 'junit', name: 'junit', version: '4.+'
 testCompile 'org.seleniumhq.selenium:selenium-firefox-driver:2.+'
 testRuntime 'org.seleniumhq.selenium:selenium-support:2.+'
 def cargoVersion = '1.4.+'
 cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
        "org.codehaus.cargo:cargo-ant:$cargoVersion",
		"org.wildfly:wildfly-controller-client:8.1.0.Final"
}

cargo {
 containerId = 'wildfly8x'
 remote {
  hostname = 'localhost'
  port = 9900
  username = 'imie'
  password = 'imie'
 }
}

test.dependsOn cargoRedeployRemote

task jenkinsTest{
 def timestamp = System.currentTimeMillis()
 doLast{
// 	delete project.testResultsDir
 	testResultsDir.eachFile { it.lastModified = timestamp }
 }
}


//task jenkinsTest {
// inputs.files test.outputs.files
// doLast {
//  def timestamp = System.currentTimeMillis()
//  if (test.testResultsDir.exists())
//   test.testResultsDir.eachFile { it.lastModified = timestamp }
// }
//}

build.dependsOn(jenkinsTest)


configurations {
    api
}

dependencies {
    api 'org.seleniumhq.selenium:selenium-firefox-driver:2.+'
    api	'org.seleniumhq.selenium:selenium-support:2.+'
}

task extractApi(type: Copy) {
    from { // use of closure defers evaluation until execution time
        configurations.api.collect { zipTree(it) }
    } 
    into "$buildDir/api/"
}
